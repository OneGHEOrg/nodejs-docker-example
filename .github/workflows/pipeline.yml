name: Liatrio Exercise

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  imagename: whoha4242/liatrio-exercise
  tag: 1.0.$GITHUB_RUN_ID
  dockeruser: whoha4242
  # NOTE: You must include a secret in your repo's settings to contain your docker user's password or change docker auth methods
  dockerpwd: ${{secrets.dockerpassword}}
  azure-rg: csw-liatrio-exercise-rg
  aks-cluster: csw-liatrio-exercise-aks1
  azure-tenant: 7500411e-6146-4c36-8612-6f9390df3440

jobs:

  build_test_push:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Run Unit Tests
      run: npm install && npm test
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{env.imagename}}:${{env.tag}}

    # Tag and push image if main branch run
    - name: Add latest tag
      if: ${{github.event_name != 'pull_request' && github.ref == 'refs/heads/main'}}
      run: docker tag ${{env.imagename}}:${{env.tag}} ${{env.imagename}}:latest
    - name: Docker Login
      if: ${{github.event_name != 'pull_request' && github.ref == 'refs/heads/main'}}
      run: docker login -u ${{env.dockeruser}} -p ${{env.dockerpwd}}
    - name: Push the Docker image versioned tag
      if: ${{github.event_name != 'pull_request' && github.ref == 'refs/heads/main'}}
      run: docker push ${{env.imagename}}:${{env.tag}}
    - name: Push the Docker image latest tag
      if: ${{github.event_name != 'pull_request' && github.ref == 'refs/heads/main'}}
      run: docker push ${{env.imagename}}:latest

  deploy:
    needs: build_test_push

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: AZ Login
      run: az login --service-principal -u ${{secrets.AZ_CLIENT_ID}} -p ${{secrets.AZ_CLIENT_SECRET}} --tenant ${{env.azure-tenant}}
    - name: Get AKS Credentials
      run: az aks get-credentials --resource-group ${{env.azure-rg}} --name ${{env.aks-cluster}}
    - name: Add helm repo
      run: helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
    - name: Install nginx ingress
      run: helm install nginx-ingress ingress-nginx/ingress-nginx --version 4.0.13 --namespace ingress-basic --create-namespace --set controller.replicaCount=2 --set controller.nodeSelector."kubernetes\.io/os"=linux
    - name: Get External IP
      run: kubectl --namespace ingress-basic get services -o wide